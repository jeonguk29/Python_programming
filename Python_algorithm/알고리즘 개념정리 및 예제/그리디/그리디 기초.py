# 그리디 알고리즘 : 현재 상황에서 지금 당장 좋은것만 고르는 방법
# 정당성 분석이 중요함 (단순히 가장 좋아보이는 것을 반복적으로 선택해도 최적의 해가 나오는지)

# 그리디 문제가 출제가 된다면 탐욕법으로 얻은 해가 최적의 해가 되는 상황에서
# 단순히 그리디 알고리즘을 이용해도 도 이처럼 최적의 해를 얻을 수 있다는 것을 '
#  추론할 수 있어야 문제가 풀리도록 출제하는 경우가 많음

# 대표적인 거스름돈 문제
n = 1260
count = 0

# 큰 단위의 화폐부터 차례대로 확인하기
coin_types = [500, 100, 50, 10]

for coin in coin_types:
    count += n // coin  # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 세기
    n %= coin

print(count)


# 시간 복잡도 분석
# 화폐의 종류가 K라고 할 때, 소스코드의 시간 복잡도는 0(K)입니다.
# 이 알고리즘의 시간 복잡도는 거슬러줘야 하는 금액과는 무관하며, 동전의 총 종류에만 영향을 받습니다.
#
